{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/recoverpwd2/recoverpwd2.component.ts","./src/app/account/auth/recoverpwd2/recoverpwd2.component.html","./src/app/account/auth/register2/register2.component.ts","./src/app/account/auth/register2/register2.component.html","./src/app/account/auth/signup/signup.component.ts","./src/app/account/auth/signup/signup.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    AccountRoutingModule,\n    CommonModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\n\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\nimport { Register2Component } from './register2/register2.component';\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'signup-2',\n        component: Register2Component\n    },\n    {\n        path: 'reset-password',\n        component: PasswordresetComponent\n    },\n    {\n        path: 'recoverpwd-2',\n        component: Recoverpwd2Component\n    },\n    {\n        path: 'login-2',\n        component: Login2Component\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { AuthRoutingModule } from './auth-routing';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    AuthRoutingModule,\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { ApiService, LoginRequest } from '../../../core/services/api.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  standalone:true,\n  imports:[CommonModule,FormsModule,ReactiveFormsModule,RouterModule]\n})\n\n/**\n * Login component\n */\nexport class LoginComponent implements OnInit {\n\n  loginForm: UntypedFormGroup;\n  submitted: any = false;\n  error: any = '';\n  successMessage: string = '';\n  returnUrl: string;\n  fieldTextType!: boolean;\n  loading: boolean = false;\n\n  // set the current year\n  year: number = new Date().getFullYear();\n\n  constructor(\n    private formBuilder: UntypedFormBuilder, \n    private route: ActivatedRoute, \n    private router: Router, \n    private apiService: ApiService\n  ) { }\n\n  ngOnInit() {\n    // Check if user is already logged in\n    if (localStorage.getItem('authToken')) {\n      this.router.navigate(['/']);\n    }\n    \n    // Get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    \n    // Check for registration success message\n    const message = this.route.snapshot.queryParams['message'];\n    if (message) {\n      this.successMessage = message;\n    }\n    \n    // Get pre-filled email from query params (from registration)\n    const prefilledEmail = this.route.snapshot.queryParams['email'] || 'user@firmpilot.com';\n    \n    // form validation\n    this.loginForm = this.formBuilder.group({\n      email: [prefilledEmail, [Validators.required, Validators.email]],\n      password: ['SecurePassword123!', [Validators.required]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n\n    // Stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    const loginData: LoginRequest = {\n      email: this.f['email'].value,\n      password: this.f['password'].value\n    };\n\n    this.apiService.login(loginData).subscribe({\n      next: (response) => {\n        this.loading = false;\n        \n        // Store authentication token if provided\n        if (response.token) {\n          localStorage.setItem('authToken', response.token);\n        }\n        \n        // Store user information if provided\n        if (response.user) {\n          localStorage.setItem('currentUser', JSON.stringify(response.user));\n          \n          // Check user role and redirect accordingly\n          const userRole = response.user.role?.toLowerCase();\n          const userType = response.user.userType?.toLowerCase();\n          const roleType = response.user.roleType?.toLowerCase();\n          console.log('Login successful. User role:', userRole, 'userType:', userType, 'roleType:', roleType, 'Full user:', response.user);\n          \n          if (userRole === 'client' || userType === 'client' || roleType === 'client') {\n            // Redirect CLIENT users to client portal\n            console.log('Redirecting CLIENT user to client portal');\n            this.router.navigate(['/client-portal']);\n          } else {\n            // Redirect other users to return url or dashboard\n            console.log('Redirecting non-CLIENT user to dashboard');\n            this.router.navigate([this.returnUrl === '/' ? '/dashboards/default' : this.returnUrl]);\n          }\n        } else {\n          // Fallback if no user data\n          this.router.navigate([this.returnUrl === '/' ? '/dashboards/default' : this.returnUrl]);\n        }\n      },\n      error: (error) => {\n        this.loading = false;\n        this.error = error.error?.message || 'Login failed. Please check your credentials.';\n      }\n    });\n  }\n\n  /**\n * Password Hide/Show\n */\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-primary-subtle\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\">Welcome Back !</h5>\n                  <p>Sign in to continue to Firm Pilot.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n            <div class=\"p-2\">\n              <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                @if(successMessage){\n                <div class=\"alert alert-success\" role=\"alert\">\n                  <i class=\"mdi mdi-check-circle-outline me-2\"></i>{{ successMessage }}\n                </div>\n                }\n                @if(error){\n                <div class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n                }\n\n                <div class=\"mb-3\">\n                  <label for=\"email\">Email</label>\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                  @if(submitted && f.email.errors){\n                  <div class=\"invalid-feedback\">\n                    @if(f.email.errors.required){\n                    <div>Email is required</div>\n                    }@if(f.email.errors.email){\n                    <div>Email must be a valid email address</div>\n                    }\n                  </div>\n                  }\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"password\">Password</label>\n                  <div class=\"input-group auth-pass-inputgroup\">\n                    <input [type]=\"fieldTextType ? 'text' : 'password'\" class=\"form-control\" formControlName=\"password\" placeholder=\"Enter password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\">\n                      <i class=\"mdi mdi-eye-outline\" [ngClass]=\"{'mdi-eye-off-outline': !fieldTextType, 'mdi-eye-outline': fieldTextType}\" (click)=\"toggleFieldTextType()\"></i></button>\n                    @if(submitted && f.password.errors){\n                    <div class=\"invalid-feedback\">\n                      @if(f.password.errors.required){\n                      <span>Password is required</span>\n                      }\n                    </div>}\n                  </div>\n                </div>\n\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\n                  <label class=\"form-check-label\" for=\"remember-check\">\n                    Remember me\n                  </label>\n                </div>\n\n                <div class=\"mt-3 d-grid\">\n                  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"loading\">\n                    @if(loading) {\n                      <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                      Signing In...\n                    } @else {\n                      Log In\n                    }\n                  </button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                        <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                        <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                        <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <a routerLink=\"/auth/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i> Forgot\n                    your\n                    password?</a>\n                </div>\n              </form>\n            </div>\n\n          </div>\n        </div>\n        <div class=\"mt-5 text-center\">\n          <p>Don't have an account ? <a routerLink=\"/auth/signup\" class=\"fw-medium text-primary\"> Signup\n              now\n            </a> </p>\n          <p>© {{year}} Firm Pilot. Professional accounting made simple.</p>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <!-- end container -->\n</div>\n<!-- end page -->","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss'],\n  standalone:true,\n  imports:[CommonModule,FormsModule,ReactiveFormsModule]\n})\n\n/**\n * Reset-password component\n */\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n\n  resetForm: UntypedFormGroup;\n  submitted: any = false;\n  error: any = '';\n  success: any = '';\n  loading: any = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-primary-subtle\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\"> Reset Password</h5>\n                  <p>Reset Password with Skote.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n\n            <div class=\"p-2\">\n              <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\n                Enter your Email and instructions will be sent to you!\n              </div>\n\n              <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n                @if(error){\n                <alert type=\"danger\" [dismissible]=\"false\">{{ error }}</alert>\n                }\n                <div class=\"mb-3\">\n                  <label for=\"email\">Email</label>\n\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Enter email\" />\n                  @if(submitted && f.email.errors){\n                  <div class=\"invalid-feedback\">\n                    @if(f.email.errors.required){\n                    <div>Email is required</div>}\n                    @if(f.email.errors.email){\n                    <div>Email must be a valid email address</div>}\n                  </div>}\n                </div>\n                <div class=\"text-end\">\n                  <button class=\"btn btn-primary w-md\" type=\"submit\">Reset</button>\n                </div>\n              </form>\n            </div>\n\n          </div> <!-- end card-body-->\n        </div>\n        <!-- end card -->\n        <div class=\"mt-5 text-center\">\n          <p>Remember It ? <a routerLink=\"/auth/login\" class=\"fw-medium text-primary\"> Sign In here</a> </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n<!-- end page -->","import { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { CommonModule } from '@angular/common';\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\n\n@Component({\n  selector: 'app-recoverpwd2',\n  templateUrl: './recoverpwd2.component.html',\n  styleUrls: ['./recoverpwd2.component.scss'],\n  standalone:true,\n  imports:[CommonModule,FormsModule,ReactiveFormsModule,SlickCarouselModule]\n})\nexport class Recoverpwd2Component implements OnInit {\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  resetForm: UntypedFormGroup;\n  submitted: any = false;\n  error: any = '';\n  success: any = '';\n  loading: any = false;\n\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n  // swiper config\n  slideConfig = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    dots: true\n  };\n}\n","<div>\n    <div class=\"container-fluid p-0\">\n        <div class=\"row g-0\">\n\n            <div class=\"col-xl-9\">\n                <div class=\"auth-full-bg pt-lg-5 p-4\">\n                    <div class=\"w-100\">\n                        <div class=\"bg-overlay\"></div>\n                        <div class=\"d-flex h-100 flex-column\">\n                            <div class=\"p-4 mt-auto\">\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-lg-7\">\n                                        <div class=\"text-center\">\n\n                                            <h4 class=\"mb-3\"><i class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                            <div dir=\"ltr\">\n                                                <ngx-slick-carousel dir=\"ltr\" class=\"owl-theme auth-review-carousel\" [config]=\"slideConfig\">\n                                                    <div class=\"item\" ngxSlickItem>\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                                ton of\n                                                                options. If you just want the HTML to integrate with\n                                                                your project, then this is the package. You can find\n                                                                the\n                                                                files in the 'dist' folder...no need to install git\n                                                                and\n                                                                all the other stuff the documentation talks about. \"\n                                                            </p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"item\" ngxSlickItem>\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                                are\n                                                                as supportive as Themesbrand, Development with be a\n                                                                nice\n                                                                experience. You guys are Wonderful. Keep us the good\n                                                                work. \"</p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </ngx-slick-carousel>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n\n            <div class=\"col-xl-3\">\n                <div class=\"auth-full-page-content p-md-5 p-4\">\n                    <div class=\"w-100\">\n\n                        <div class=\"d-flex flex-column h-100\">\n                            <div class=\"mb-4 mb-md-5\">\n                                <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                    <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                    <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                                </a>\n                            </div>\n                            <div class=\"my-auto\">\n                                <div>\n                                    <h5 class=\"text-primary\"> Reset Password</h5>\n                                    <p class=\"text-muted\">Reset Password with Skote.</p>\n                                </div>\n\n                                <div class=\"mt-4\">\n                                    <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\n                                        Enter your Email and instructions will be sent to you!\n                                    </div>\n                                    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\">\n                                        @if(error){\n                                        <alert type=\"danger\" [dismissible]=\"false\">{{ error }}</alert>\n                                        }\n                                        <div class=\"mb-3\">\n                                            <label for=\"useremail\">Email</label>\n                                            <input type=\"email\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" class=\"form-control\" id=\"useremail\" placeholder=\"Enter email\">\n                                            @if(submitted && f.email.errors){\n                                            <div class=\"invalid-feedback\">\n                                                @if(f.email.errors.required){\n                                                <div>Email is required</div>}\n                                                @if(f.email.errors.email){\n                                                <div>Email must be a valid email address</div>}\n                                            </div>}\n                                        </div>\n\n                                        <div class=\"text-end\">\n                                            <button class=\"btn btn-primary w-md\" type=\"submit\">Reset</button>\n                                        </div>\n\n                                    </form>\n                                    <div class=\"mt-5 text-center\">\n                                        <p>Remember It ? <a routerLink=\"/auth/login-2\" class=\"fw-medium text-primary\"> Sign In here</a> </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"mt-4 mt-md-5 text-center\">\n                                <p class=\"mb-0\">©{{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                    by Themesbrand</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n        </div>\n        <!-- end row -->\n    </div>\n    <!-- end container-fluid -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\nimport { Store } from '@ngrx/store';\nimport { Register } from 'src/app/store/Authentication/authentication.actions';\nimport { CommonModule } from '@angular/common';\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\n\n@Component({\n  selector: 'app-register2',\n  templateUrl: './register2.component.html',\n  styleUrls: ['./register2.component.scss'],\n  standalone:true,\n  imports:[CommonModule,FormsModule,ReactiveFormsModule,SlickCarouselModule ]\n})\nexport class Register2Component implements OnInit {\n\n  signupForm: UntypedFormGroup;\n  submitted: any = false;\n  error: any = '';\n  successmsg: any = false;\n\n  constructor(private formBuilder: UntypedFormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private userService: UserProfileService, public store: Store) { }\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  ngOnInit(): void {\n    document.body.classList.add(\"auth-body-bg\");\n\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  // swiper config\n  slideConfig = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    dots: true\n  };\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    const email = this.f['email'].value;\n    const name = this.f['name'].value;\n    const password = this.f['password'].value;\n\n    //Dispatch Action\n    this.store.dispatch(Register({ email: email, username: name, password: password }));\n  }\n}\n","<div class=\"container-fluid p-0\">\n    <div class=\"row g-0\">\n\n        <div class=\"col-xl-9\">\n            <div class=\"auth-full-bg pt-lg-5 p-4\">\n                <div class=\"w-100\">\n                    <div class=\"bg-overlay\"></div>\n                    <div class=\"d-flex h-100 flex-column\">\n\n                        <div class=\"p-4 mt-auto\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-lg-7\">\n                                    <div class=\"text-center\">\n\n                                        <h4 class=\"mb-3\"><i class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                        <div dir=\"ltr\">\n                                            <ngx-slick-carousel dir=\"ltr\" class=\"owl-theme auth-review-carousel\" [config]=\"slideConfig\">\n                                                <div class=\"item\" ngxSlickItem>\n                                                    <div class=\"py-3\">\n                                                        <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                            ton of\n                                                            options. If you just want the HTML to integrate with\n                                                            your project, then this is the package. You can find\n                                                            the\n                                                            files in the 'dist' folder...no need to install git\n                                                            and\n                                                            all the other stuff the documentation talks about. \"\n                                                        </p>\n\n                                                        <div>\n                                                            <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                            <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"item\" ngxSlickItem>\n                                                    <div class=\"py-3\">\n                                                        <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                            are\n                                                            as supportive as Themesbrand, Development with be a\n                                                            nice\n                                                            experience. You guys are Wonderful. Keep us the good\n                                                            work. \"</p>\n\n                                                        <div>\n                                                            <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                            <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ngx-slick-carousel>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n\n        <div class=\"col-xl-3\">\n            <div class=\"auth-full-page-content p-md-5 p-4\">\n                <div class=\"w-100\">\n\n                    <div class=\"d-flex flex-column h-100\">\n                        <div class=\"mb-4 mb-md-5\">\n                            <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                            </a>\n                        </div>\n                        <div class=\"my-auto\">\n                            <div>\n                                <h5 class=\"text-primary\">Register account</h5>\n                                <p class=\"text-muted\">Get your free Skote account now.</p>\n                            </div>\n                            <div class=\"mt-4\">\n                                <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n                                    @if(successmsg){\n                                    <alert type=\"success\" [dismissible]=\"false\">Registeration\n                                        successfull.\n                                    </alert>}\n                                    @if(error){\n                                    <alert type=\"danger\" [dismissible]=\"false\">{{ error }}</alert>\n                                    }\n                                    <div class=\"mb-3\">\n                                        <label for=\"username\">Username</label>\n                                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" placeholder=\"Enter username\">\n                                        @if(submitted && f.username.errors){\n                                        <div class=\"invalid-feedback\">\n                                            @if(f.username.errors.required){\n                                            <div>Userame is required</div>}\n                                        </div>}\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"useremail\">Email</label>\n                                        <input type=\"email\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" class=\"form-control\" id=\"useremail\" placeholder=\"Enter email\">\n                                        @if(submitted && f.email.errors){\n                                        <div class=\"invalid-feedback\">\n                                            @if(f.email.errors.required){\n                                            <div>Email is required</div>}\n                                            @if(f.email.errors.required){\n                                            <div>Email must be a valid email address</div>}\n                                        </div>}\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"userpassword\">Password</label>\n                                        <input type=\"password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">\n                                        @if(submitted && f.password.errors){\n                                        <div class=\"invalid-feedback\">\n                                            @if(f.password.errors.required){\n                                            <div>Password is required</div>}\n                                        </div>}\n                                    </div>\n\n                                    <div>\n                                        <p class=\"mb-0\">By registering you agree to the Skote <a href=\"javascript: void(0);\" class=\"text-primary\">Terms of Use</a>\n                                        </p>\n                                    </div>\n\n                                    <div class=\"mt-4 d-grid\">\n                                        <button class=\"btn btn-primary btn-block\" type=\"submit\">Register</button>\n                                    </div>\n\n                                    <div class=\"mt-4 text-center\">\n                                        <h5 class=\"font-size-14 mb-3\">Sign up using</h5>\n                                        <ul class=\"list-inline\">\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                                                    <i class=\"mdi mdi-facebook\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                                                    <i class=\"mdi mdi-twitter\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                                                    <i class=\"mdi mdi-google\"></i>\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </form>\n\n                                <div class=\"mt-5 text-center\">\n                                    <p>Already have an account ? <a routerLink=\"/auth/login-2\" class=\"fw-medium text-primary\"> Login</a> </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"mt-4 mt-md-5 text-center\">\n                            <p class=\"mb-0\">© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                by Themesbrand</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n    </div>\n    <!-- end row -->\n</div>\n<!-- end container-fluid -->","import { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService, SignupRequest } from '../../../core/services/api.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n  standalone:true,\n  imports:[CommonModule,FormsModule,ReactiveFormsModule]\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm: UntypedFormGroup;\n  submitted: any = false;\n  error: any = '';\n  successmsg: any = false;\n  loading: boolean = false;\n\n  // set the current year\n  year: number = new Date().getFullYear();\n\n  // Available roles for the dropdown\n  roles = [\n    { value: 'ACCOUNTANT', label: 'Accountant' },\n    { value: 'ADMIN', label: 'Admin' },\n    { value: 'CLIENT', label: 'Client' }\n  ];\n\n  constructor(\n    private formBuilder: UntypedFormBuilder, \n    private route: ActivatedRoute, \n    private router: Router, \n    private apiService: ApiService\n  ) { }\n\n  ngOnInit() {\n    this.signupForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      role: ['ACCOUNTANT', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    this.successmsg = false;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    const signupData: SignupRequest = {\n      firstName: this.f['firstName'].value,\n      lastName: this.f['lastName'].value,\n      email: this.f['email'].value,\n      password: this.f['password'].value,\n      role: this.f['role'].value\n    };\n\n    this.apiService.signup(signupData).subscribe({\n      next: (response) => {\n        this.loading = false;\n        this.successmsg = true;\n        this.error = '';\n        // Redirect to login page after successful registration\n        setTimeout(() => {\n          this.router.navigate(['/auth/login']);\n        }, 2000);\n      },\n      error: (error) => {\n        this.loading = false;\n        this.error = error.error?.message || 'Registration failed. Please try again.';\n        this.successmsg = false;\n      }\n    });\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-primary-subtle\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\">Create Account</h5>\n                  <p>Join Firm Pilot today.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n            <div class=\"p-2\">\n\n              <form class=\"needs-validation\" name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n                @if(successmsg){\n                <div class=\"alert alert-success\" role=\"alert\">\n                  Registration successful! Redirecting to login...\n                </div>\n                }\n                @if(error){\n                <div class=\"alert alert-danger\" role=\"alert\">{{ error }}</div>\n                }\n                <div class=\"mb-3\">\n                  <label for=\"role\" class=\"form-label\">Role</label>\n                  <select formControlName=\"role\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\" id=\"role\">\n                    @for(role of roles; track role.value) {\n                      <option [value]=\"role.value\">{{ role.label }}</option>\n                    }\n                  </select>\n                  @if(submitted && f.role.errors){\n                  <div class=\"invalid-feedback\">\n                    @if(f.role.errors.required){\n                    <div>Role is required</div>}\n                  </div>}\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"mb-3\">\n                      <label for=\"firstName\" class=\"form-label\">First Name</label>\n                      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" id=\"firstName\" placeholder=\"Enter first name\" />\n                      @if(submitted && f.firstName.errors){\n                      <div class=\"invalid-feedback\">\n                        @if(f.firstName.errors.required){\n                        <div>First name is required</div>}\n                      </div>}\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"mb-3\">\n                      <label for=\"lastName\" class=\"form-label\">Last Name</label>\n                      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" id=\"lastName\" placeholder=\"Enter last name\" />\n                      @if(submitted && f.lastName.errors){\n                      <div class=\"invalid-feedback\">\n                        @if(f.lastName.errors.required){\n                        <div>Last name is required</div>}\n                      </div>}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n                  @if(submitted && f.email.errors){\n                  <div class=\"invalid-feedback\">\n                    @if(f.email.errors.required){\n                    <div>Email is required</div>}\n                    @if(f.email.errors.email){\n                    <div>Email must be a valid email address</div>}\n                  </div>}\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"password\" class=\"form-label\">Password</label>\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password (min 6 characters)\" />\n                  @if(submitted && f.password.errors){\n                  <div class=\"invalid-feedback\">\n                    @if(f.password.errors.required){\n                    <div>Password is required</div>}\n                    @if(f.password.errors.minlength){\n                    <div>Password must be at least 6 characters</div>}\n                  </div>}\n                </div>\n\n                <div class=\"mt-4 d-grid\">\n                  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"loading\">\n                    @if(loading) {\n                      <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                      Creating Account...\n                    } @else {\n                      Register\n                    }\n                  </button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                        <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                        <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                        <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <p class=\"mb-0\">By registering you agree to the Firm Pilot <a href=\"javascript: void(0);\" class=\"text-primary\">Terms of\n                      Use</a></p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- end card -->\n\n        <div class=\"mt-5 text-center\">\n          <p>Already have an account ? <a routerLink=\"/auth/login\" class=\"fw-medium text-primary\"> Login</a>\n          </p>\n          <p>© {{year}} Firm Pilot. Professional accounting made simple.</p>\n        </div>\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>"],"names":["RouterModule","routes","path","loadChildren","then","m","AuthModule","AccountRoutingModule","forChild","imports","i1","exports","CommonModule","AccountModule","LoginComponent","Login2Component","SignupComponent","PasswordresetComponent","Register2Component","Recoverpwd2Component","component","AuthRoutingModule","FormsModule","ReactiveFormsModule","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","successMessage","ɵɵtextInterpolate","error","ɵɵtemplate","LoginComponent_Conditional_29_Conditional_1_Template","LoginComponent_Conditional_29_Conditional_2_Template","ɵɵconditional","f","email","errors","required","LoginComponent_Conditional_37_Conditional_1_Template","password","constructor","formBuilder","route","router","apiService","submitted","loading","year","Date","getFullYear","ngOnInit","localStorage","getItem","navigate","returnUrl","snapshot","queryParams","message","prefilledEmail","loginForm","group","controls","onSubmit","invalid","loginData","value","login","subscribe","next","response","token","setItem","user","JSON","stringify","userRole","role","toLowerCase","userType","roleType","console","log","toggleFieldTextType","fieldTextType","ɵɵdirectiveInject","UntypedFormBuilder","i2","ActivatedRoute","Router","i3","ApiService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_22_listener","LoginComponent_Conditional_23_Template","LoginComponent_Conditional_24_Template","LoginComponent_Conditional_29_Template","LoginComponent_Template_i_click_36_listener","LoginComponent_Conditional_37_Template","LoginComponent_Conditional_44_Template","LoginComponent_Conditional_45_Template","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵpureFunction2","_c1","i4","NgClass","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","RouterLink","styles","environment","PasswordresetComponent_Conditional_30_Conditional_1_Template","PasswordresetComponent_Conditional_30_Conditional_2_Template","authenticationService","success","resetForm","ngAfterViewInit","defaultauth","resetPassword","catch","AuthenticationService","PasswordresetComponent_Template","PasswordresetComponent_Template_form_ngSubmit_24_listener","PasswordresetComponent_Conditional_25_Template","PasswordresetComponent_Conditional_30_Template","SlickCarouselModule","Recoverpwd2Component_Conditional_60_Conditional_1_Template","Recoverpwd2Component_Conditional_60_Conditional_2_Template","slideConfig","slidesToShow","slidesToScroll","arrows","dots","Recoverpwd2Component_Template","Recoverpwd2Component_Template_form_ngSubmit_54_listener","Recoverpwd2Component_Conditional_55_Template","Recoverpwd2Component_Conditional_60_Template","i5","SlickCarouselComponent","SlickItemDirective","Register","Register2Component_Conditional_58_Conditional_1_Template","username","Register2Component_Conditional_63_Conditional_1_Template","Register2Component_Conditional_63_Conditional_2_Template","Register2Component_Conditional_68_Conditional_1_Template","userService","store","successmsg","document","body","classList","add","signupForm","name","dispatch","UserProfileService","Store","Register2Component_Template","Register2Component_Template_form_ngSubmit_51_listener","Register2Component_Conditional_52_Template","Register2Component_Conditional_53_Template","Register2Component_Conditional_58_Template","Register2Component_Conditional_63_Template","Register2Component_Conditional_68_Template","i6","i7","role_r2","label","SignupComponent_Conditional_31_Conditional_1_Template","SignupComponent_Conditional_38_Conditional_1_Template","firstName","SignupComponent_Conditional_44_Conditional_1_Template","lastName","SignupComponent_Conditional_49_Conditional_1_Template","SignupComponent_Conditional_49_Conditional_2_Template","SignupComponent_Conditional_54_Conditional_1_Template","SignupComponent_Conditional_54_Conditional_2_Template","minlength","roles","minLength","signupData","signup","setTimeout","SignupComponent_Template","SignupComponent_Template_form_ngSubmit_22_listener","SignupComponent_Conditional_23_Template","SignupComponent_Conditional_24_Template","ɵɵrepeaterCreate","SignupComponent_For_30_Template","_forTrack0","SignupComponent_Conditional_31_Template","SignupComponent_Conditional_38_Template","SignupComponent_Conditional_44_Template","SignupComponent_Conditional_49_Template","SignupComponent_Conditional_54_Template","SignupComponent_Conditional_57_Template","SignupComponent_Conditional_58_Template","ɵɵrepeater","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}