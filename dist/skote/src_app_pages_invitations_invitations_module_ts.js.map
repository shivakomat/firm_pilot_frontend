{"version":3,"file":"src_app_pages_invitations_invitations_module_ts.js","mappings":"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","sources":["./src/app/pages/invitations/invitation-management/invitation-management.component.ts","./src/app/pages/invitations/invitation-management/invitation-management.component.html","./src/app/pages/invitations/invitations-routing.module.ts","./src/app/pages/invitations/invitations.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { PagetitleComponent } from 'src/app/shared/ui/pagetitle/pagetitle.component';\nimport { ApiService, Invitation } from 'src/app/core/services/api.service';\n\n@Component({\n  selector: 'app-invitation-management',\n  templateUrl: './invitation-management.component.html',\n  styleUrls: ['./invitation-management.component.scss'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, PagetitleComponent]\n})\nexport class InvitationManagementComponent implements OnInit {\n  breadCrumbItems: any[];\n  invitations: Invitation[] = [];\n  filteredInvitations: Invitation[] = [];\n  searchTerm: string = '';\n  loading = false;\n  error = '';\n\n  // Filter options\n  statusFilter: string = 'all';\n  statusOptions = [\n    { value: 'all', label: 'All Invitations' },\n    { value: 'pending', label: 'Pending' },\n    { value: 'sent', label: 'Sent' },\n    { value: 'accepted', label: 'Accepted' },\n    { value: 'expired', label: 'Expired' }\n  ];\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.breadCrumbItems = [\n      { label: 'Invitations' }, \n      { label: 'Invitation Management', active: true }\n    ];\n    \n    this.loadInvitations();\n  }\n\n  /**\n   * Load all invitations from the API\n   */\n  loadInvitations(): void {\n    this.loading = true;\n    this.error = '';\n\n    this.apiService.getInvitations().subscribe({\n      next: (response) => {\n        console.log('Invitations loaded:', response);\n        if (response.success && response.invitations) {\n          this.invitations = response.invitations;\n          this.applyFilters();\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error loading invitations:', error);\n        this.error = 'Failed to load invitations. Please try again.';\n        this.loading = false;\n\n        // Handle authentication errors\n        if (error.status === 401 || error.status === 403) {\n          this.error = 'Authentication failed. Please log in again.';\n        }\n      }\n    });\n  }\n\n  /**\n   * Apply search and status filters\n   */\n  applyFilters(): void {\n    let filtered = [...this.invitations];\n\n    // Apply status filter\n    if (this.statusFilter !== 'all') {\n      filtered = filtered.filter(invitation => invitation.status === this.statusFilter);\n    }\n\n    // Apply search filter\n    if (this.searchTerm.trim()) {\n      const term = this.searchTerm.toLowerCase();\n      filtered = filtered.filter(invitation => \n        invitation.clientName?.toLowerCase().includes(term) ||\n        invitation.clientEmail?.toLowerCase().includes(term)\n      );\n    }\n\n    this.filteredInvitations = filtered;\n  }\n\n  /**\n   * Handle search input change\n   */\n  onSearchChange(): void {\n    this.applyFilters();\n  }\n\n  /**\n   * Handle status filter change\n   */\n  onStatusFilterChange(): void {\n    this.applyFilters();\n  }\n\n  /**\n   * Resend an invitation\n   */\n  resendInvitation(invitation: Invitation): void {\n    if (!invitation.id) return;\n\n    const resendData = {\n      message: invitation.message // Use existing message or could be customized\n    };\n\n    this.apiService.resendInvitation(invitation.id, resendData).subscribe({\n      next: (response) => {\n        console.log('Invitation resent:', response);\n        if (response.success) {\n          this.loadInvitations(); // Refresh the list\n          console.log('Invitation resent successfully!');\n        }\n      },\n      error: (error) => {\n        console.error('Error resending invitation:', error);\n        \n        // Handle authentication errors\n        if (error.status === 401 || error.status === 403) {\n          console.error('Authentication failed. Please log in again.');\n        }\n      }\n    });\n  }\n\n  /**\n   * Get CSS class for invitation status badge\n   */\n  getInvitationStatusClass(status: string): string {\n    switch (status) {\n      case 'pending':\n        return 'bg-warning';\n      case 'sent':\n        return 'bg-info';\n      case 'accepted':\n        return 'bg-success';\n      case 'expired':\n        return 'bg-danger';\n      default:\n        return 'bg-secondary';\n    }\n  }\n\n  /**\n   * Get display text for invitation status\n   */\n  getInvitationStatusText(status: string): string {\n    switch (status) {\n      case 'pending':\n        return 'Pending';\n      case 'sent':\n        return 'Sent';\n      case 'accepted':\n        return 'Accepted';\n      case 'expired':\n        return 'Expired';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  /**\n   * Check if invitation can be resent\n   */\n  canResendInvitation(invitation: Invitation): boolean {\n    return invitation.status === 'pending' || invitation.status === 'sent' || invitation.status === 'expired';\n  }\n\n  /**\n   * Get summary statistics\n   */\n  getInvitationStats() {\n    const total = this.invitations.length;\n    const pending = this.invitations.filter(inv => inv.status === 'pending').length;\n    const sent = this.invitations.filter(inv => inv.status === 'sent').length;\n    const accepted = this.invitations.filter(inv => inv.status === 'accepted').length;\n    const expired = this.invitations.filter(inv => inv.status === 'expired').length;\n\n    return { total, pending, sent, accepted, expired };\n  }\n}\n","<div class=\"container-fluid\">\n  <app-page-title title=\"Invitation Management\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n\n  <!-- Statistics Cards -->\n  <div class=\"row mb-4\">\n    <div class=\"col-xl-3 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex\">\n            <div class=\"flex-1 overflow-hidden\">\n              <p class=\"text-truncate font-size-14 mb-2\">Total Invitations</p>\n              <h4 class=\"mb-0\">{{getInvitationStats().total}}</h4>\n            </div>\n            <div class=\"text-primary\">\n              <i class=\"bx bx-mail-send font-size-24\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-xl-3 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex\">\n            <div class=\"flex-1 overflow-hidden\">\n              <p class=\"text-truncate font-size-14 mb-2\">Pending</p>\n              <h4 class=\"mb-0\">{{getInvitationStats().pending}}</h4>\n            </div>\n            <div class=\"text-warning\">\n              <i class=\"bx bx-time-five font-size-24\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-xl-3 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex\">\n            <div class=\"flex-1 overflow-hidden\">\n              <p class=\"text-truncate font-size-14 mb-2\">Accepted</p>\n              <h4 class=\"mb-0\">{{getInvitationStats().accepted}}</h4>\n            </div>\n            <div class=\"text-success\">\n              <i class=\"bx bx-check-circle font-size-24\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-xl-3 col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"d-flex\">\n            <div class=\"flex-1 overflow-hidden\">\n              <p class=\"text-truncate font-size-14 mb-2\">Expired</p>\n              <h4 class=\"mb-0\">{{getInvitationStats().expired}}</h4>\n            </div>\n            <div class=\"text-danger\">\n              <i class=\"bx bx-x-circle font-size-24\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Invitations Table -->\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"row mb-2\">\n            <div class=\"col-sm-4\">\n              <div class=\"search-box me-2 mb-2 d-inline-block\">\n                <div class=\"position-relative\">\n                  <input type=\"text\" class=\"form-control\" id=\"searchTableList\" \n                         placeholder=\"Search invitations...\" \n                         [(ngModel)]=\"searchTerm\" \n                         (ngModelChange)=\"onSearchChange()\">\n                  <i class=\"bx bx-search-alt search-icon\"></i>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-4\">\n              <select class=\"form-select\" [(ngModel)]=\"statusFilter\" (ngModelChange)=\"onStatusFilterChange()\">\n                @for(option of statusOptions; track option.value) {\n                  <option [value]=\"option.value\">{{option.label}}</option>\n                }\n              </select>\n            </div>\n            <div class=\"col-sm-4\">\n              <div class=\"text-sm-end\">\n                <button type=\"button\" class=\"btn btn-success btn-rounded waves-effect waves-light mb-2\" \n                        (click)=\"loadInvitations()\" [disabled]=\"loading\">\n                  <i class=\"mdi mdi-refresh me-1\"></i> Refresh\n                </button>\n              </div>\n            </div>\n          </div>\n\n          @if(loading) {\n            <div class=\"text-center py-4\">\n              <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n              </div>\n              <p class=\"mt-2 text-muted\">Loading invitations...</p>\n            </div>\n          } @else if(error) {\n            <div class=\"alert alert-danger\" role=\"alert\">\n              <i class=\"bx bx-error-circle me-2\"></i>{{error}}\n            </div>\n          } @else {\n            <div class=\"table-responsive\">\n              <table class=\"table table-nowrap align-middle\">\n                <thead class=\"table-light\">\n                  <tr>\n                    <th>Client Name</th>\n                    <th>Email</th>\n                    <th>Status</th>\n                    <th>Sent Date</th>\n                    <th>Expires Date</th>\n                    <th>Accepted Date</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  @for(invitation of filteredInvitations; track invitation.id) {\n                    <tr>\n                      <td>\n                        <h5 class=\"font-size-14 mb-1\">{{invitation.clientName}}</h5>\n                        <p class=\"text-muted mb-0\">ID: {{invitation.clientId}}</p>\n                      </td>\n                      <td>{{invitation.clientEmail}}</td>\n                      <td>\n                        <span class=\"badge\" [ngClass]=\"getInvitationStatusClass(invitation.status)\">\n                          {{getInvitationStatusText(invitation.status)}}\n                        </span>\n                      </td>\n                      <td>\n                        @if(invitation.sentAt) {\n                          {{invitation.sentAt | date:'medium'}}\n                        } @else {\n                          <span class=\"text-muted\">-</span>\n                        }\n                      </td>\n                      <td>\n                        @if(invitation.expiresAt) {\n                          <span [ngClass]=\"invitation.status === 'expired' ? 'text-danger' : 'text-muted'\">\n                            {{invitation.expiresAt | date:'medium'}}\n                          </span>\n                        } @else {\n                          <span class=\"text-muted\">-</span>\n                        }\n                      </td>\n                      <td>\n                        @if(invitation.acceptedAt) {\n                          {{invitation.acceptedAt | date:'medium'}}\n                        } @else {\n                          <span class=\"text-muted\">-</span>\n                        }\n                      </td>\n                      <td>\n                        <div class=\"d-flex gap-2\">\n                          @if(canResendInvitation(invitation)) {\n                            <button type=\"button\" \n                                    class=\"btn btn-sm btn-outline-warning\" \n                                    title=\"Resend Invitation\"\n                                    (click)=\"resendInvitation(invitation)\">\n                              <i class=\"bx bx-refresh\"></i>\n                            </button>\n                          }\n                          <button type=\"button\" \n                                  class=\"btn btn-sm btn-outline-info\" \n                                  title=\"View Details\">\n                            <i class=\"bx bx-show\"></i>\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  } @empty {\n                    <tr>\n                      <td colspan=\"7\" class=\"text-center py-4\">\n                        <div class=\"text-muted\">\n                          <i class=\"bx bx-mail-send font-size-48 text-muted d-block mb-2\"></i>\n                          @if(statusFilter === 'all') {\n                            No invitations found. Start by inviting clients from the client list.\n                          } @else {\n                            No {{statusFilter}} invitations found.\n                          }\n                        </div>\n                      </td>\n                    </tr>\n                  }\n                </tbody>\n              </table>\n            </div>\n          }\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { InvitationManagementComponent } from './invitation-management/invitation-management.component';\nimport { ClientRegistrationComponent } from './client-registration/client-registration.component';\nimport { RoleGuard } from '../../core/guards/role.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InvitationManagementComponent,\n    canActivate: [RoleGuard],\n    data: { role: 'ACCOUNTANT' }\n  },\n  {\n    path: 'register/:token',\n    component: ClientRegistrationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InvitationsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InvitationsRoutingModule } from './invitations-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InvitationsRoutingModule\n  ]\n})\nexport class InvitationsModule { }\n"],"names":["CommonModule","FormsModule","PagetitleComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r1","value","ɵɵadvance","ɵɵtextInterpolate","label","ɵɵelement","ɵɵtextInterpolate1","ctx_r1","error","ɵɵpipeBind2","invitation_r3","sentAt","status","expiresAt","acceptedAt","ɵɵlistener","InvitationManagementComponent_Conditional_68_For_20_Conditional_22_Template_button_click_0_listener","ɵɵrestoreView","_r4","ɵɵnextContext","$implicit","ɵɵresetView","resendInvitation","ɵɵtemplate","InvitationManagementComponent_Conditional_68_For_20_Conditional_12_Template","InvitationManagementComponent_Conditional_68_For_20_Conditional_13_Template","InvitationManagementComponent_Conditional_68_For_20_Conditional_15_Template","InvitationManagementComponent_Conditional_68_For_20_Conditional_16_Template","InvitationManagementComponent_Conditional_68_For_20_Conditional_18_Template","InvitationManagementComponent_Conditional_68_For_20_Conditional_19_Template","InvitationManagementComponent_Conditional_68_For_20_Conditional_22_Template","clientName","clientId","clientEmail","getInvitationStatusClass","getInvitationStatusText","ɵɵconditional","canResendInvitation","statusFilter","InvitationManagementComponent_Conditional_68_ForEmpty_21_Conditional_4_Template","InvitationManagementComponent_Conditional_68_ForEmpty_21_Conditional_5_Template","ɵɵrepeaterCreate","InvitationManagementComponent_Conditional_68_For_20_Template","_forTrack1","InvitationManagementComponent_Conditional_68_ForEmpty_21_Template","ɵɵrepeater","filteredInvitations","InvitationManagementComponent","constructor","apiService","invitations","searchTerm","loading","statusOptions","ngOnInit","breadCrumbItems","active","loadInvitations","getInvitations","subscribe","next","response","console","log","success","applyFilters","filtered","filter","invitation","trim","term","toLowerCase","includes","onSearchChange","onStatusFilterChange","id","resendData","message","getInvitationStats","total","length","pending","inv","sent","accepted","expired","ɵɵdirectiveInject","i1","ApiService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","InvitationManagementComponent_Template","rf","ctx","ɵɵtwoWayListener","InvitationManagementComponent_Template_input_ngModelChange_55_listener","$event","ɵɵtwoWayBindingSet","InvitationManagementComponent_Template_select_ngModelChange_58_listener","InvitationManagementComponent_For_60_Template","_forTrack0","InvitationManagementComponent_Template_button_click_63_listener","InvitationManagementComponent_Conditional_66_Template","InvitationManagementComponent_Conditional_67_Template","InvitationManagementComponent_Conditional_68_Template","ɵɵtwoWayProperty","i2","NgClass","DatePipe","i3","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgModel","styles","RouterModule","ClientRegistrationComponent","RoleGuard","routes","path","component","canActivate","data","role","InvitationsRoutingModule","forChild","imports","exports","ReactiveFormsModule","InvitationsModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}